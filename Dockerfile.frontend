# Multi-stage build for Plasmic Frontend
FROM node:24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache make bubblewrap python3 build-base bash git

# Set working directory
WORKDIR /app

# Copy entire repository structure (needed for build process)
COPY . .

# Install root dependencies
RUN echo "Installing root dependencies..." && yarn install --frozen-lockfile && echo "Root dependencies installed!"

# Run yarn setup from root
RUN echo "Running yarn setup..." && yarn setup && echo "Yarn setup completed!"

# Build canvas-packages
WORKDIR /app/platform/canvas-packages
RUN echo "Installing canvas-packages dependencies..." && yarn install --frozen-lockfile && echo "Canvas-packages dependencies installed!"
RUN echo "Building canvas-packages..." && yarn build && echo "Canvas-packages build completed!"

# Accept API_BASE_PATH as build argument (defaults to empty string)
ARG API_BASE_PATH=""

# Create .env file with dummy values
WORKDIR /app/platform/wab
RUN echo "API_BASE_PATH=${API_BASE_PATH}" > .env && \
    echo "AMPLITUDE_API_KEY=test_key" >> .env && \
    echo "INTERCOM_APP_ID=test_id" >> .env && \
    echo "POSTHOG_API_KEY=test_key" >> .env && \
    echo "POSTHOG_HOST=test_key" >> .env && \
    echo "POSTHOG_REVERSE_PROXY_HOST=test_key" >> .env && \
    echo "SENTRY_ORG_ID=test_key" >> .env && \
    echo "SENTRY_PROJECT_ID=test_key" >> .env && \
    echo "SENTRY_DSN=test_key" >> .env && \
    echo "STRIPE_PUBLISHABLE_KEY=test_key" >> .env

# Build CSS
RUN echo "Building CSS..." && yarn build-css && echo "CSS build completed!"

# Build the frontend
RUN echo "Building frontend..." && yarn build && echo "Frontend build completed!"

# Production stage
FROM nginx:alpine

# Copy the built frontend files
COPY --from=builder /app/platform/wab/build /usr/share/nginx/html

# Copy nginx configuration template and startup script
COPY nginx.conf /etc/nginx/conf.d/default.conf.template
COPY start-nginx.sh /start-nginx.sh
RUN chmod +x /start-nginx.sh

# Expose port 80
EXPOSE 80

# Start nginx with environment variable substitution
CMD ["/start-nginx.sh"]
